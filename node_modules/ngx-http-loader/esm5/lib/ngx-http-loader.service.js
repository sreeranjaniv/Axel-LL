/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ReplaySubject } from 'rxjs';
import { NgxHttpLoaderInterceptor } from './ngx-loader-interceptor.service';
import * as i0 from "@angular/core";
import * as i1 from "./ngx-loader-interceptor.service";
var NgxHttpLoaderService = /** @class */ (function () {
    function NgxHttpLoaderService(reqService) {
        this.reqService = reqService;
        this.showLoader = new ReplaySubject(1);
    }
    Object.defineProperty(NgxHttpLoaderService.prototype, "isShowLoader", {
        get: /**
         * @return {?}
         */
        function () {
            return this.showLoader.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NgxHttpLoaderService.prototype.show = /**
     * @return {?}
     */
    function () {
        this.reqService.setForceStopReq = true;
        this.showLoader.next(true);
    };
    /**
     * @return {?}
     */
    NgxHttpLoaderService.prototype.hide = /**
     * @return {?}
     */
    function () {
        this.showLoader.next(false);
        this.reqService.setForceStopReq = false;
    };
    NgxHttpLoaderService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    NgxHttpLoaderService.ctorParameters = function () { return [
        { type: NgxHttpLoaderInterceptor }
    ]; };
    /** @nocollapse */ NgxHttpLoaderService.ngInjectableDef = i0.defineInjectable({ factory: function NgxHttpLoaderService_Factory() { return new NgxHttpLoaderService(i0.inject(i1.NgxHttpLoaderInterceptor)); }, token: NgxHttpLoaderService, providedIn: "root" });
    return NgxHttpLoaderService;
}());
export { NgxHttpLoaderService };
if (false) {
    /** @type {?} */
    NgxHttpLoaderService.prototype.showLoader;
    /** @type {?} */
    NgxHttpLoaderService.prototype.reqService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWh0dHAtbG9hZGVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaHR0cC1sb2FkZXIvIiwic291cmNlcyI6WyJsaWIvbmd4LWh0dHAtbG9hZGVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFjLGFBQWEsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNqRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQzs7OztJQVExRSw4QkFBb0IsVUFBb0M7UUFBcEMsZUFBVSxHQUFWLFVBQVUsQ0FBMEI7MEJBRm5DLElBQUksYUFBYSxDQUFVLENBQUMsQ0FBQztLQUVXO0lBRTdELHNCQUFJLDhDQUFZOzs7O1FBQWhCO1lBQ0UsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3ZDOzs7T0FBQTs7OztJQUVNLG1DQUFJOzs7O1FBQ1QsSUFBSSxDQUFDLFVBQVUsQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDOzs7OztJQUd0QixtQ0FBSTs7OztRQUNULElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxVQUFVLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQzs7O2dCQW5CM0MsVUFBVSxTQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7OztnQkFKUSx3QkFBd0I7OzsrQkFGakM7O1NBT2Esb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgUmVwbGF5U3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTmd4SHR0cExvYWRlckludGVyY2VwdG9yIH0gZnJvbSAnLi9uZ3gtbG9hZGVyLWludGVyY2VwdG9yLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hIdHRwTG9hZGVyU2VydmljZSB7XG4gIHByaXZhdGUgc2hvd0xvYWRlciA9IG5ldyBSZXBsYXlTdWJqZWN0PGJvb2xlYW4+KDEpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVxU2VydmljZTogTmd4SHR0cExvYWRlckludGVyY2VwdG9yKSB7IH1cblxuICBnZXQgaXNTaG93TG9hZGVyKCk6IE9ic2VydmFibGU8Ym9vbGVhbj4ge1xuICAgIHJldHVybiB0aGlzLnNob3dMb2FkZXIuYXNPYnNlcnZhYmxlKCk7XG4gIH1cblxuICBwdWJsaWMgc2hvdygpOiB2b2lkIHtcbiAgICB0aGlzLnJlcVNlcnZpY2Uuc2V0Rm9yY2VTdG9wUmVxID0gdHJ1ZTtcbiAgICB0aGlzLnNob3dMb2FkZXIubmV4dCh0cnVlKTtcbiAgfVxuXG4gIHB1YmxpYyBoaWRlKCk6IHZvaWQge1xuICAgIHRoaXMuc2hvd0xvYWRlci5uZXh0KGZhbHNlKTtcbiAgICB0aGlzLnJlcVNlcnZpY2Uuc2V0Rm9yY2VTdG9wUmVxID0gZmFsc2U7XG4gIH1cbn1cbiJdfQ==