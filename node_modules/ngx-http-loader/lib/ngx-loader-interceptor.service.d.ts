import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { ExistingProvider } from '@angular/core';
import { Observable } from 'rxjs';
export declare class NgxHttpLoaderInterceptor implements HttpInterceptor {
    private reqStatus$;
    private pendingReqCnt;
    private forceStop;
    private filterUrls;
    private filterUrlPatterns;
    private filterMethods;
    private filterHeaders;
    readonly pendingRequestCnt: number;
    readonly reqStatus: Observable<boolean>;
    setFilterUrls: string[];
    setUrlPatterns: RegExp[];
    setFilterMethods: string[];
    setFilterHeaders: string[];
    setForceStopReq: boolean;
    private checkIsFilterUrl;
    private checkUrlPatterns;
    private checkHttpMethod;
    private checkReqHeader;
    private isStopReq;
    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
}
export declare const RequestsInterceptorProvider: ExistingProvider[];
